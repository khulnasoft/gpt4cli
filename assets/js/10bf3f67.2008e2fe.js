"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[338],{9312:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var o=t(4848),i=t(8453);const s={sidebar_position:2,sidebar_label:"Context"},l="Context Management",a={id:"core-concepts/context-management",title:"Context Management",description:"Context in Gpt4cli refers to files, directories, URLs, images, notes, or piped in data that the LLM uses to understand and work on your project. Context is always associated with a plan",source:"@site/docs/core-concepts/context-management.md",sourceDirName:"core-concepts",slug:"/core-concepts/context-management",permalink:"/core-concepts/context-management",draft:!1,unlisted:!1,editUrl:"https://github.com/khulnasoft/gpt4cli/tree/main/docs/docs/core-concepts/context-management.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Context"},sidebar:"tutorialSidebar",previous:{title:"Plans",permalink:"/core-concepts/plans"},next:{title:"Prompts",permalink:"/core-concepts/prompts"}},r={},c=[{value:"Loading Context",id:"loading-context",level:2},{value:"Loading Files",id:"loading-files",level:3},{value:"Loading Directories",id:"loading-directories",level:3},{value:"Loading Directory Layouts",id:"loading-directory-layouts",level:3},{value:"Loading URLs",id:"loading-urls",level:3},{value:"Loading Images",id:"loading-images",level:3},{value:"Loading Notes",id:"loading-notes",level:3},{value:"Piping Into Context",id:"piping-into-context",level:3},{value:"Ignoring files",id:"ignoring-files",level:3},{value:"Viewing Context",id:"viewing-context",level:2},{value:"Removing Context",id:"removing-context",level:2},{value:"Clearing Context",id:"clearing-context",level:2},{value:"Updating Context",id:"updating-context",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"context-management",children:"Context Management"})}),"\n",(0,o.jsxs)(n.p,{children:["Context in Gpt4cli refers to files, directories, URLs, images, notes, or piped in data that the LLM uses to understand and work on your project. Context is always associated with a ",(0,o.jsx)(n.a,{href:"/core-concepts/plans",children:"plan"})]}),"\n",(0,o.jsxs)(n.p,{children:["Changes to context are ",(0,o.jsx)(n.a,{href:"/core-concepts/version-control",children:"version controlled"})," and can be ",(0,o.jsx)(n.a,{href:"/core-concepts/branches",children:"branched"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"loading-context",children:"Loading Context"}),"\n",(0,o.jsxs)(n.p,{children:["To load files, directories, directory layouts, urls, images, notes, or piped data into a plan's context, use the ",(0,o.jsx)(n.code,{children:"gpt4cli load"})," command."]}),"\n",(0,o.jsx)(n.h3,{id:"loading-files",children:"Loading Files"}),"\n",(0,o.jsxs)(n.p,{children:["You can pass ",(0,o.jsx)(n.code,{children:"load"})," one or more file paths. File paths are relative to the current directory in your terminal."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"gpt4cli load component.ts # single file\ngpt4cli load component.ts action.ts reducer.ts # multiple files\n"})}),"\n",(0,o.jsx)(n.p,{children:"You can also load multiple files using glob patterns:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"gpt4cli load tests/**/*.ts # loads all .ts files in 'tests' and its subdirectories\ngpt4cli load * # loads all files in the current directory\n"})}),"\n",(0,o.jsxs)(n.p,{children:["You can load context from parent or sibling directories if needed by using ",(0,o.jsx)(n.code,{children:".."})," in your load paths."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"gpt4cli load ../file.go # loads file.go from parent directory\ngpt4cli load ../sibling-dir/test.go # loads test.go from sibling directory\n"})}),"\n",(0,o.jsx)(n.h3,{id:"loading-directories",children:"Loading Directories"}),"\n",(0,o.jsxs)(n.p,{children:["You can load an entire directory with the ",(0,o.jsx)(n.code,{children:"--recursive/-r"})," flag:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"gpt4cli load lib -r # loads lib, all its files and all its subdirectories\ngpt4cli load * -r # loads all files in the current directory and all its subdirectories\n"})}),"\n",(0,o.jsx)(n.h3,{id:"loading-directory-layouts",children:"Loading Directory Layouts"}),"\n",(0,o.jsxs)(n.p,{children:["There are tasks where it's helpful for the LLM to the know the structure of your project or sections of your project, but it doesn't necessarily need to the see the content of every file. In that case, you can pass in a directory with the ",(0,o.jsx)(n.code,{children:"--tree"})," flag to load in the directory layout. It will include just the names of all included files and subdirectories (and each subdirectory's files and subdirectories, and so on)."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"gpt4cli load . --tree # loads the layout of the current directory and its subdirectories (file names only)\ngpt4cli load src/components --tree # loads the layout of the src/components directory\n"})}),"\n",(0,o.jsx)(n.h3,{id:"loading-urls",children:"Loading URLs"}),"\n",(0,o.jsx)(n.p,{children:"Gpt4cli can load the text content of URLs, which can be useful for adding relevant documentation, blog posts, discussions, and the like."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"gpt4cli load https://redux.js.org/usage/writing-tests # loads the text-only content of the url\n"})}),"\n",(0,o.jsx)(n.h3,{id:"loading-images",children:"Loading Images"}),"\n",(0,o.jsx)(n.p,{children:"Gpt4cli can load images into context."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"gpt4cli load ui-mockup.png\n"})}),"\n",(0,o.jsx)(n.p,{children:"For the default GPT-4o model, png, jpeg, non-animated gif, and webp formats are supported. For other models, support for images in general, and particular formats specifically, will depend on the model."}),"\n",(0,o.jsx)(n.h3,{id:"loading-notes",children:"Loading Notes"}),"\n",(0,o.jsx)(n.p,{children:"You can add notes to context, which are just simple strings."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"gpt4cli load -n 'add logging statements to all the code you generate.' # load a note into context\n"})}),"\n",(0,o.jsx)(n.p,{children:"Notes can be useful as 'sticky' explanations or instructions that will tend to have more prominence throughout a long conversation than normal prompts. That's because long conversations are summarized to stay below a token limit, which can cause some details from your prompts to be dropped along the way. This doesn't happen if you use notes."}),"\n",(0,o.jsx)(n.h3,{id:"piping-into-context",children:"Piping Into Context"}),"\n",(0,o.jsx)(n.p,{children:"You can pipe the results of other commands into context:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm test | gpt4cli load # loads the output of `npm test`\n"})}),"\n",(0,o.jsx)(n.h3,{id:"ignoring-files",children:"Ignoring files"}),"\n",(0,o.jsxs)(n.p,{children:["If you're in a git repo, Gpt4cli respects ",(0,o.jsx)(n.code,{children:".gitignore"})," and won't load any files that you're ignoring. You can also add a ",(0,o.jsx)(n.code,{children:".gpt4cliignore"})," file with ignore patterns to any directory."]}),"\n",(0,o.jsxs)(n.p,{children:["You can force Gpt4cli to load ignored files with the ",(0,o.jsx)(n.code,{children:"--force/-f"})," flag:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"gpt4cli load .env --force # loads the .env file even if it's in .gitignore or .gpt4cliignore\n"})}),"\n",(0,o.jsx)(n.h2,{id:"viewing-context",children:"Viewing Context"}),"\n",(0,o.jsxs)(n.p,{children:["To list everything in context, use the ",(0,o.jsx)(n.code,{children:"gpt4cli ls"})," command:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"gpt4cli ls\n"})}),"\n",(0,o.jsx)(n.h2,{id:"removing-context",children:"Removing Context"}),"\n",(0,o.jsxs)(n.p,{children:["To remove selectively remove context, use the ",(0,o.jsx)(n.code,{children:"gpt4cli rm"})," command:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"gpt4cli rm component.ts # remove by name\ngpt4cli rm 2 # remove by number in the `gpt4cli ls` list\ngpt4cli rm 2-5 # remove a range of indices\ngpt4cli rm lib/**/*.js # remove by glob pattern\ngpt4cli rm lib # remove whole directory\n"})}),"\n",(0,o.jsx)(n.h2,{id:"clearing-context",children:"Clearing Context"}),"\n",(0,o.jsxs)(n.p,{children:["To clear all context, use the ",(0,o.jsx)(n.code,{children:"gpt4cli clear"})," command:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"gpt4cli clear\n"})}),"\n",(0,o.jsx)(n.h2,{id:"updating-context",children:"Updating Context"}),"\n",(0,o.jsxs)(n.p,{children:["If files in context are modified outside of Gpt4cli, you will be prompted to update them the next time you send a prompt. You can also update any outdated files with the ",(0,o.jsx)(n.code,{children:"update"})," command."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"gpt4cli update # update files in context\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>a});var o=t(6540);const i={},s=o.createContext(i);function l(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);