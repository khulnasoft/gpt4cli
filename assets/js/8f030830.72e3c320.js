"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[423],{1792:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var t=s(4848),r=s(8453);const i={sidebar_position:10,sidebar_label:"Development"},o="Development",l={id:"development",title:"Development",description:"To set up a development environment, first install dependencies:",source:"@site/docs/development.md",sourceDirName:".",slug:"/development",permalink:"/development",draft:!1,unlisted:!1,editUrl:"https://github.com/khulnasoft/gpt4cli/tree/main/docs/docs/development.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,sidebar_label:"Development"},sidebar:"tutorialSidebar",previous:{title:"Security",permalink:"/security"},next:{title:"Environment Variables",permalink:"/environment-variables"}},c={},d=[];function a(e){const n={a:"a",code:"code",h1:"h1",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"development",children:"Development"}),"\n",(0,t.jsx)(n.p,{children:"To set up a development environment, first install dependencies:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Go 1.21.3 - ",(0,t.jsx)(n.a,{href:"https://go.dev/doc/install",children:"install here"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/cespare/reflex",children:"reflex"})," 0.3.1 - for watching files and rebuilding in development. Install with ",(0,t.jsx)(n.code,{children:"go install github.com/cespare/reflex@v0.3.1"})]}),"\n",(0,t.jsxs)(n.li,{children:["PostgreSQL 14 - ",(0,t.jsx)(n.a,{href:"https://www.postgresql.org/download/",children:"https://www.postgresql.org/download/"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Make sure ",(0,t.jsx)(n.code,{children:"$GOPATH"})," is in your $PATH"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# print $GOPATH\necho $GOPATH\n\n# if it's empty\nexport GOPATH=<path-to-go-folder>\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Make sure the PostgreSQL server is running and create a database called ",(0,t.jsx)(n.code,{children:"gpt4cli"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Then make sure the following environment variables are set:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export DATABASE_URL=postgres://user:password@host:5432/gpt4cli?sslmode=disable # replace with your own database URL\nexport GOENV=development\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Now from the root directory, run the script in ",(0,t.jsx)(n.code,{children:"app/scripts/dev.sh"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["On Linux, you'll want to run this as ",(0,t.jsx)(n.code,{children:"sudo"})," for copying the CLI to ",(0,t.jsx)(n.code,{children:"/usr/local/bin"})," after it builds:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo ./app/scripts/dev.sh\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You might also need sudo on MacOS if you don't have write permissions to ",(0,t.jsx)(n.code,{children:"/usr/local/bin"}),", but this shouldn't be the case for most users. Assuming you have those write permissions, you can run the script without ",(0,t.jsx)(n.code,{children:"sudo"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"./app/scripts/dev.sh\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This creates watchers with ",(0,t.jsx)(n.code,{children:"reflex"})," to rebuild both the server and the CLI when relevant files change."]}),"\n",(0,t.jsx)(n.p,{children:"The server runs on port 8080 by default."}),"\n",(0,t.jsxs)(n.p,{children:["After each build, the CLI is copied to ",(0,t.jsx)(n.code,{children:"/usr/local/bin/gpt4cli-dev"}),"so you can use it with just ",(0,t.jsx)(n.code,{children:"gpt4cli-dev"})," in any directory. A ",(0,t.jsx)(n.code,{children:"g4cd"})," alias is also created. Note the difference from the ",(0,t.jsx)(n.code,{children:"gpt4cli"})," binary and ",(0,t.jsx)(n.code,{children:"g4c"})," aliases which are installed for production usage\u2014aliases are used for development to avoid overwriting the production install."]}),"\n",(0,t.jsxs)(n.p,{children:["The output directory can be changed with the ",(0,t.jsx)(n.code,{children:"GPT4CLI_DEV_CLI_OUT_DIR"})," environment variable. The binary name can be changed with ",(0,t.jsx)(n.code,{children:"GPT4CLI_DEV_CLI_NAME"})," and the alias can be changed with ",(0,t.jsx)(n.code,{children:"GPT4CLI_DEV_CLI_ALIAS"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["When running the Gpt4cli CLI, set ",(0,t.jsx)(n.code,{children:"export GPT4CLI_ENV=development"})," to run in development mode, which connects to the development server by default."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var t=s(6540);const r={},i=t.createContext(r);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);