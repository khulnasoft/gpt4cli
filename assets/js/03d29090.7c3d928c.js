"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[730],{2189:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>c});var i=n(4848),o=n(8453);const t={sidebar_position:2,sidebar_label:"Roles"},r="Model Roles",l={id:"models/roles",title:"Model Roles",description:"Gpt4cli has multiple roles that are used for different aspects of its functionality. Each role can have its model and settings changed independently. These are the roles:",source:"@site/docs/models/roles.md",sourceDirName:"models",slug:"/models/roles",permalink:"/models/roles",draft:!1,unlisted:!1,editUrl:"https://github.com/khulnasoft/gpt4cli/tree/main/docs/docs/models/roles.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Roles"},sidebar:"tutorialSidebar",previous:{title:"Providers",permalink:"/models/model-providers"},next:{title:"Settings",permalink:"/models/model-settings"}},d={},c=[{value:"<code>planner</code>",id:"planner",level:3},{value:"<code>summarizer</code>",id:"summarizer",level:3},{value:"<code>auto-continue</code>",id:"auto-continue",level:3},{value:"<code>builder</code>",id:"builder",level:3},{value:"<code>verifier</code>",id:"verifier",level:3},{value:"<code>auto-fix</code>",id:"auto-fix",level:3},{value:"<code>names</code>",id:"names",level:3},{value:"<code>commit-messages</code>",id:"commit-messages",level:3}];function a(e){const s={code:"code",h1:"h1",h3:"h3",header:"header",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"model-roles",children:"Model Roles"})}),"\n",(0,i.jsxs)(s.p,{children:["Gpt4cli has multiple ",(0,i.jsx)(s.strong,{children:"roles"})," that are used for different aspects of its functionality. Each role can have its model and settings changed independently. These are the roles:"]}),"\n",(0,i.jsx)(s.h3,{id:"planner",children:(0,i.jsx)(s.code,{children:"planner"})}),"\n",(0,i.jsx)(s.p,{children:"This is the 'main' model that replies to prompts and makes plans."}),"\n",(0,i.jsx)(s.p,{children:"Requires streaming support."}),"\n",(0,i.jsx)(s.h3,{id:"summarizer",children:(0,i.jsx)(s.code,{children:"summarizer"})}),"\n",(0,i.jsxs)(s.p,{children:["Summarizes conversations to stay under the limit set in ",(0,i.jsx)(s.code,{children:"max-convo-tokens"}),". Also keeps track of the status of a plan to help determine whether it's finished or should continue (in conjunction with the ",(0,i.jsx)(s.code,{children:"auto-continue"})," role)."]}),"\n",(0,i.jsx)(s.h3,{id:"auto-continue",children:(0,i.jsx)(s.code,{children:"auto-continue"})}),"\n",(0,i.jsxs)(s.p,{children:["Determines whether a plan is finished or should automatically continue based on the previous response and the ",(0,i.jsx)(s.code,{children:"summarizer"})," role's latest summary."]}),"\n",(0,i.jsx)(s.p,{children:"Requires function calling support."}),"\n",(0,i.jsx)(s.h3,{id:"builder",children:(0,i.jsx)(s.code,{children:"builder"})}),"\n",(0,i.jsxs)(s.p,{children:["Builds the proposed changes described by the ",(0,i.jsx)(s.code,{children:"planner"})," role into pending file updates."]}),"\n",(0,i.jsx)(s.p,{children:"Requires function calling support."}),"\n",(0,i.jsx)(s.h3,{id:"verifier",children:(0,i.jsx)(s.code,{children:"verifier"})}),"\n",(0,i.jsxs)(s.p,{children:["Verifies correctness of file updates produced by the ",(0,i.jsx)(s.code,{children:"builder"})," role. Defaults to the same model and settings as the ",(0,i.jsx)(s.code,{children:"builder"})," role."]}),"\n",(0,i.jsx)(s.p,{children:"Requires function calling support."}),"\n",(0,i.jsx)(s.h3,{id:"auto-fix",children:(0,i.jsx)(s.code,{children:"auto-fix"})}),"\n",(0,i.jsxs)(s.p,{children:["Fixes syntax errors, as well as other problems identified by the ",(0,i.jsx)(s.code,{children:"verifier"})," role. Defaults to the same model and settings as the ",(0,i.jsx)(s.code,{children:"builder"})," role."]}),"\n",(0,i.jsx)(s.p,{children:"Requires function calling support."}),"\n",(0,i.jsx)(s.h3,{id:"names",children:(0,i.jsx)(s.code,{children:"names"})}),"\n",(0,i.jsx)(s.p,{children:"Gives automatically-generated names to plans and context."}),"\n",(0,i.jsx)(s.p,{children:"Requires function calling support."}),"\n",(0,i.jsx)(s.h3,{id:"commit-messages",children:(0,i.jsx)(s.code,{children:"commit-messages"})}),"\n",(0,i.jsx)(s.p,{children:"Automatically generates commit messages for a set of pending updates."}),"\n",(0,i.jsx)(s.p,{children:"Requires function calling support."})]})}function h(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>l});var i=n(6540);const o={},t=i.createContext(o);function r(e){const s=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(t.Provider,{value:s},e.children)}}}]);