"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[814],{6711:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>l,metadata:()=>c,toc:()=>r});var i=t(4848),s=t(8453);const l={sidebar_position:3,sidebar_label:"Quickstart"},a="Quickstart",c={id:"quick-start",title:"Quickstart",description:"Install Gpt4cli",source:"@site/docs/quick-start.md",sourceDirName:".",slug:"/quick-start",permalink:"/quick-start",draft:!1,unlisted:!1,editUrl:"https://github.com/khulnasoft/gpt4cli/tree/main/docs/docs/quick-start.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"Quickstart"},sidebar:"tutorialSidebar",previous:{title:"Install",permalink:"/install"},next:{title:"Plans",permalink:"/core-concepts/plans"}},o={},r=[{value:"Install Gpt4cli",id:"install-gpt4cli",level:2},{value:"Set <code>OPENAI_API_KEY</code>",id:"set-openai_api_key",level:2},{value:"Create A Plan",id:"create-a-plan",level:2},{value:"Load In Context",id:"load-in-context",level:2},{value:"Send A Prompt",id:"send-a-prompt",level:2},{value:"Review The Changes",id:"review-the-changes",level:2},{value:"Iterate If Needed",id:"iterate-if-needed",level:2},{value:"1. Continue prompting.",id:"1-continue-prompting",level:3},{value:"2. Rewind the plan.",id:"2-rewind-the-plan",level:3},{value:"3. Reject incorrect files.",id:"3-reject-incorrect-files",level:3},{value:"Apply The Changes",id:"apply-the-changes",level:2},{value:"CLI Help",id:"cli-help",level:2},{value:"Aliases",id:"aliases",level:2}];function h(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"quickstart",children:"Quickstart"}),"\n",(0,i.jsx)(n.h2,{id:"install-gpt4cli",children:"Install Gpt4cli"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl -sL https://raw.githubusercontent.com/khulnasoft/gpt4cli/main/app/cli/install.sh | bash\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"/install",children:"Click here for more installation options."})}),"\n",(0,i.jsxs)(n.p,{children:["Note that Windows is supported via ",(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/windows/wsl/about",children:"WSL"}),". Gpt4cli only works correctly on Windows in the WSL shell. It doesn't work in the Windows CMD prompt or PowerShell."]}),"\n",(0,i.jsxs)(n.h2,{id:"set-openai_api_key",children:["Set ",(0,i.jsx)(n.code,{children:"OPENAI_API_KEY"})]}),"\n",(0,i.jsxs)(n.p,{children:["Gpt4cli uses OpenAI by default. If you don't have an OpenAI account, first ",(0,i.jsx)(n.a,{href:"https://platform.openai.com/signup",children:"sign up here."})]}),"\n",(0,i.jsxs)(n.p,{children:["Then ",(0,i.jsx)(n.a,{href:"https://platform.openai.com/account/api-keys",children:"generate an API key here"})," and ",(0,i.jsx)(n.code,{children:"export"})," it."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"export OPENAI_API_KEY=...\n"})}),"\n",(0,i.jsx)(n.h2,{id:"create-a-plan",children:"Create A Plan"}),"\n",(0,i.jsx)(n.p,{children:"If you're starting on a new project, make a directory first:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"mkdir your-project-dir\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Now ",(0,i.jsx)(n.code,{children:"cd"})," into your ",(0,i.jsx)(n.strong,{children:"project's directory."})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd your-project-dir\n"})}),"\n",(0,i.jsx)(n.p,{children:"For a new project, you might also want to initialize a git repo. Gpt4cli doesn't require that your project is in a git repo, but it does integrate well with git if you use it."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git init\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Now ",(0,i.jsx)(n.strong,{children:"create your first plan"})," with ",(0,i.jsx)(n.code,{children:"gpt4cli new"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"gpt4cli new\n"})}),"\n",(0,i.jsx)(n.h2,{id:"load-in-context",children:"Load In Context"}),"\n",(0,i.jsxs)(n.p,{children:["Load any relevant files, directories, directory layouts, urls, or images ",(0,i.jsx)(n.strong,{children:"into the LLM's context"})," with ",(0,i.jsx)(n.code,{children:"gpt4cli load"}),". You can also pipe in the results of a command."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"gpt4cli load some-file.ts another-file.ts\ngpt4cli load src/components -r # load a whole directory\ngpt4cli load src --tree # load a directory layout (file names only)\ngpt4cli load src/**/*.ts # load files matching a glob pattern\ngpt4cli load https://raw.githubusercontent.com/khulnasoft/gpt4cli/main/README.md # load the text content of a url\ngpt4cli load images/mockup.png # load an image\nnpm test | gpt4cli load # pipe in the output of a command\n"})}),"\n",(0,i.jsx)(n.h2,{id:"send-a-prompt",children:"Send A Prompt"}),"\n",(0,i.jsxs)(n.p,{children:["Now ",(0,i.jsx)(n.strong,{children:"send your prompt."})," You can pass it in as a file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"gpt4cli tell -f prompt.txt\n"})}),"\n",(0,i.jsx)(n.p,{children:"Write it in vim:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"gpt4cli tell # tell with no arguments opens vim so you can write your prompt there\n"})}),"\n",(0,i.jsx)(n.p,{children:"Or pass it inline (use enter for line breaks):"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'gpt4cli tell "add a new line chart showing the number of foobars over time to components/charts.tsx"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Gpt4cli will make a plan for your task and then implement that plan in code. ",(0,i.jsx)(n.strong,{children:"The changes won't yet be applied to your project files."})," Instead, they'll accumulate in Gpt4cli's sandbox."]}),"\n",(0,i.jsx)(n.h2,{id:"review-the-changes",children:"Review The Changes"}),"\n",(0,i.jsxs)(n.p,{children:["When Gpt4cli has finished with your task, you can review the proposed changes with the ",(0,i.jsx)(n.code,{children:"gpt4cli diff"})," command, which shows them in ",(0,i.jsx)(n.code,{children:"git diff"})," format:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"gpt4cli diff\n"})}),"\n",(0,i.jsx)(n.p,{children:"Or you can view them in Gpt4cli's changes TUI:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"gpt4cli changes\n"})}),"\n",(0,i.jsx)(n.h2,{id:"iterate-if-needed",children:"Iterate If Needed"}),"\n",(0,i.jsx)(n.p,{children:"If the proposed changes have issues or need more work, you have a few options:"}),"\n",(0,i.jsx)(n.h3,{id:"1-continue-prompting",children:"1. Continue prompting."}),"\n",(0,i.jsx)(n.p,{children:"You can send another prompt to continue updating or refining the plan."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'gpt4cli tell "the line chart should be centered and have a width and height of 80% of the screen"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"2-rewind-the-plan",children:"2. Rewind the plan."}),"\n",(0,i.jsxs)(n.p,{children:["You can use ",(0,i.jsx)(n.code,{children:"gpt4cli rewind"})," to revert to an earlier step in the plan, load in new context or update the prompt as needed, then proceed from there with another ",(0,i.jsx)(n.code,{children:"gpt4cli tell"})," or a ",(0,i.jsx)(n.code,{children:"gpt4cli continue"})," (which continues from where the plan left off)."]}),"\n",(0,i.jsxs)(n.p,{children:["Use ",(0,i.jsx)(n.code,{children:"gpt4cli log"})," for a list of all changes in a plan. You can rewind one step by running ",(0,i.jsx)(n.code,{children:"gpt4cli rewind"})," with no arguments, go back a specific number of steps (",(0,i.jsx)(n.code,{children:"gpt4cli rewind 3"}),"), or rewind to a specific change with a hash ",(0,i.jsx)(n.code,{children:"gpt4cli rewind e7e06e0"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Seeing the conversation history can also be helpful when rewinding, since ",(0,i.jsx)(n.code,{children:"gpt4cli log"})," doesn't include conversation messages in its output. You can do that with ",(0,i.jsx)(n.code,{children:"gpt4cli convo"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"3-reject-incorrect-files",children:"3. Reject incorrect files."}),"\n",(0,i.jsxs)(n.p,{children:["While we're working hard to make file updates as reliable as possible, bad updates can still happen. If the plan's changes were applied incorrectly to a file, you can either ",(0,i.jsx)(n.a,{href:"#apply-the-changes",children:"apply the changes"})," and then fix the problems manually, ",(0,i.jsx)(n.em,{children:"or"})," you can reject the updates to that file and then make the proposed changes yourself manually."]}),"\n",(0,i.jsxs)(n.p,{children:["To reject changes to a file (or multiple files), you can run ",(0,i.jsx)(n.code,{children:"gpt4cli reject"})," with the file path(s):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"gpt4cli reject components/charts.tsx\n"})}),"\n",(0,i.jsxs)(n.p,{children:["You can also reject changes using the ",(0,i.jsx)(n.code,{children:"r"})," hotkey in the ",(0,i.jsx)(n.code,{children:"gpt4cli changes"})," TUI."]}),"\n",(0,i.jsxs)(n.p,{children:["Once the bad update is rejected, copy the changes from the plan's output or run ",(0,i.jsx)(n.code,{children:"gpt4cli convo"})," to output the full conversation and copy them from there. Then apply the updates to that file yourself."]}),"\n",(0,i.jsx)(n.h2,{id:"apply-the-changes",children:"Apply The Changes"}),"\n",(0,i.jsxs)(n.p,{children:["Once you're happy (enough) with the plan's changes, you can apply them to your project files with ",(0,i.jsx)(n.code,{children:"gpt4cli apply"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"gpt4cli apply\n"})}),"\n",(0,i.jsx)(n.p,{children:"If you're in a git repository, Gpt4cli will give you the option of grouping the changes into a git commit with an automatically generated commit message."}),"\n",(0,i.jsx)(n.p,{children:"You've now experienced the core workflow of Gpt4cli! While there are more commands and options available, those described above are what you'll be using most often."}),"\n",(0,i.jsx)(n.h2,{id:"cli-help",children:"CLI Help"}),"\n",(0,i.jsx)(n.p,{children:"After any gpt4cli command is run, commands that could make sense to run next will be suggested. You can learn to use Gpt4cli quickly by jumping in and following these suggestions."}),"\n",(0,i.jsxs)(n.p,{children:["You can get help on the CLI with ",(0,i.jsx)(n.code,{children:"gpt4cli help"})," and a list of all commands with ",(0,i.jsx)(n.code,{children:"gpt4cli help --all"}),". Get help on a specific command and its options with ",(0,i.jsx)(n.code,{children:"gpt4cli [command] --help"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"aliases",children:"Aliases"}),"\n",(0,i.jsxs)(n.p,{children:["You can use the ",(0,i.jsx)(n.code,{children:"g4c"})," alias instead of ",(0,i.jsx)(n.code,{children:"gpt4cli"})," to type a bit less, and most common commands have their own aliases as well."]}),"\n",(0,i.jsx)(n.p,{children:"Here are the same commands we went through above using aliases to minimize typing:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"g4c new\ng4c l some-file.ts another-file.ts # load\ng4c t -f prompt.txt # tell\ng4c diff\ng4c ch # changes\ng4c log\ng4c rw e7e06e0 # rewind\ng4c c # continue\ng4c rj components/charts.tsx # reject\ng4c ap # apply\n"})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var i=t(6540);const s={},l=i.createContext(s);function a(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);