"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[784],{6713:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var c=t(4848),i=t(8453);const s={sidebar_position:4,sidebar_label:"Pending Changes"},o="Pending Changes",a={id:"core-concepts/reviewing-changes",title:"Pending Changes",description:"When you give Gpt4cli a task, the changes aren't applied directly to your project files. Instead, they are accumulated in Gpt4cli's version-controlled sandbox so that you can review them first.",source:"@site/docs/core-concepts/reviewing-changes.md",sourceDirName:"core-concepts",slug:"/core-concepts/reviewing-changes",permalink:"/core-concepts/reviewing-changes",draft:!1,unlisted:!1,editUrl:"https://github.com/khulnasoft/gpt4cli/tree/main/docs/docs/core-concepts/reviewing-changes.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,sidebar_label:"Pending Changes"},sidebar:"tutorialSidebar",previous:{title:"Prompts",permalink:"/core-concepts/prompts"},next:{title:"Version Control",permalink:"/core-concepts/version-control"}},r={},l=[{value:"<code>gpt4cli diffs</code> / Changes TUI",id:"gpt4cli-diffs--changes-tui",level:2},{value:"Rejecting Files",id:"rejecting-files",level:2},{value:"Apply The Changes",id:"apply-the-changes",level:2}];function h(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h1,{id:"pending-changes",children:"Pending Changes"}),"\n",(0,c.jsxs)(n.p,{children:["When you give Gpt4cli a task, the changes aren't applied directly to your project files. Instead, they are accumulated in Gpt4cli's version-controlled ",(0,c.jsx)(n.strong,{children:"sandbox"})," so that you can review them first."]}),"\n",(0,c.jsxs)(n.h2,{id:"gpt4cli-diffs--changes-tui",children:[(0,c.jsx)(n.code,{children:"gpt4cli diffs"})," / Changes TUI"]}),"\n",(0,c.jsxs)(n.p,{children:["When Gpt4cli has finished with your task, you can review the proposed changes with the ",(0,c.jsx)(n.code,{children:"gpt4cli diff"})," command, which shows them in ",(0,c.jsx)(n.code,{children:"git diff"})," format:"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"gpt4cli diff\n"})}),"\n",(0,c.jsx)(n.p,{children:"Or you can view them in Gpt4cli's changes TUI:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"gpt4cli changes\n"})}),"\n",(0,c.jsx)(n.h2,{id:"rejecting-files",children:"Rejecting Files"}),"\n",(0,c.jsxs)(n.p,{children:["While we're working hard to make file updates as reliable as possible, bad updates can still happen. If the plan's changes were applied incorrectly to a file, you can either ",(0,c.jsx)(n.a,{href:"#apply-the-changes",children:"apply the changes"})," and then fix the problems manually, ",(0,c.jsx)(n.em,{children:"or"})," you can reject the updates to that file and then make the proposed changes yourself manually."]}),"\n",(0,c.jsxs)(n.p,{children:["To reject changes to a file (or multiple files), you can run ",(0,c.jsx)(n.code,{children:"gpt4cli reject"})," with one ore more file paths:"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"gpt4cli reject \n"})}),"\n",(0,c.jsxs)(n.p,{children:["You can also reject changes using the ",(0,c.jsx)(n.code,{children:"r"})," hotkey in the ",(0,c.jsx)(n.code,{children:"gpt4cli changes"})," TUI."]}),"\n",(0,c.jsxs)(n.p,{children:["Once the bad update is rejected, copy the changes from the plan's output or run ",(0,c.jsx)(n.code,{children:"gpt4cli convo"})," to output the full conversation and copy them from there. Then apply the updates to that file yourself."]}),"\n",(0,c.jsx)(n.h2,{id:"apply-the-changes",children:"Apply The Changes"}),"\n",(0,c.jsxs)(n.p,{children:["Once you're happy with the plan's changes, you can apply them to your project files with ",(0,c.jsx)(n.code,{children:"gpt4cli apply"}),":"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"gpt4cli apply\n"})}),"\n",(0,c.jsx)(n.p,{children:"If you're in a git repository, Gpt4cli will give you the option of grouping the changes into a git commit with an automatically generated commit message. Any uncommitted changes that were present in your working directory beforehand will be unaffected."}),"\n",(0,c.jsxs)(n.p,{children:["You can skip the ",(0,c.jsx)(n.code,{children:"gpt4cli apply"})," confirmation with the ",(0,c.jsx)(n.code,{children:"-y"})," flag."]})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var c=t(6540);const i={},s=c.createContext(i);function o(e){const n=c.useContext(s);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),c.createElement(s.Provider,{value:n},e.children)}}}]);