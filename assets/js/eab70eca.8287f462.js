"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[113],{6707:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>r});var s=l(4848),i=l(8453);const a={sidebar_position:8,sidebar_label:"CLI Reference"},c="CLI Reference",t={id:"cli-reference",title:"CLI Reference",description:"All Gpt4cli CLI commands and their options.",source:"@site/docs/cli-reference.md",sourceDirName:".",slug:"/cli-reference",permalink:"/cli-reference",draft:!1,unlisted:!1,editUrl:"https://github.com/khulnasoft/gpt4cli/tree/main/docs/docs/cli-reference.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,sidebar_label:"CLI Reference"},sidebar:"tutorialSidebar",previous:{title:"Self-Hosting",permalink:"/hosting/self-hosting"},next:{title:"Security",permalink:"/security"}},d={},r=[{value:"Usage",id:"usage",level:2},{value:"Help",id:"help",level:2},{value:"Plans",id:"plans",level:2},{value:"new",id:"new",level:3},{value:"plans",id:"plans-1",level:3},{value:"current",id:"current",level:3},{value:"cd",id:"cd",level:3},{value:"delete-plan",id:"delete-plan",level:3},{value:"rename",id:"rename",level:3},{value:"archive",id:"archive",level:3},{value:"unarchive",id:"unarchive",level:3},{value:"Context",id:"context",level:2},{value:"load",id:"load",level:3},{value:"ls",id:"ls",level:3},{value:"rm",id:"rm",level:3},{value:"update",id:"update",level:3},{value:"clear",id:"clear",level:3},{value:"Control",id:"control",level:2},{value:"tell",id:"tell",level:3},{value:"continue",id:"continue",level:3},{value:"build",id:"build",level:3},{value:"Changes",id:"changes",level:2},{value:"diff",id:"diff",level:3},{value:"changes",id:"changes-1",level:3},{value:"apply",id:"apply",level:3},{value:"reject",id:"reject",level:3},{value:"History",id:"history",level:2},{value:"log",id:"log",level:3},{value:"rewind",id:"rewind",level:3},{value:"convo",id:"convo",level:3},{value:"summary",id:"summary",level:3},{value:"Branches",id:"branches",level:2},{value:"branches",id:"branches-1",level:3},{value:"checkout",id:"checkout",level:3},{value:"delete-branch",id:"delete-branch",level:3},{value:"Background Tasks / Streams",id:"background-tasks--streams",level:2},{value:"ps",id:"ps",level:3},{value:"connect",id:"connect",level:3},{value:"stop",id:"stop",level:3},{value:"Models",id:"models",level:2},{value:"models",id:"models-1",level:3},{value:"models default",id:"models-default",level:3},{value:"models available",id:"models-available",level:3},{value:"set-model",id:"set-model",level:3},{value:"set-model default",id:"set-model-default",level:3},{value:"models add",id:"models-add",level:3},{value:"models delete",id:"models-delete",level:3},{value:"model-packs",id:"model-packs",level:3},{value:"model-packs create",id:"model-packs-create",level:3},{value:"model-packs delete",id:"model-packs-delete",level:3},{value:"Account Management",id:"account-management",level:2},{value:"sign-in",id:"sign-in",level:3},{value:"invite",id:"invite",level:3},{value:"revoke",id:"revoke",level:3},{value:"users",id:"users",level:3}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"cli-reference",children:"CLI Reference"})}),"\n",(0,s.jsx)(n.p,{children:"All Gpt4cli CLI commands and their options."}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli [command] [flags]\ng4c [command] [flags] # 'g4c' is an alias for 'gpt4cli'\n"})}),"\n",(0,s.jsx)(n.h2,{id:"help",children:"Help"}),"\n",(0,s.jsx)(n.p,{children:"Built-in help."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli help\ng4c h # alias\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--all/-a"}),": List all commands."]}),"\n",(0,s.jsx)(n.p,{children:"For help on a specific command, use:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli [command] --help\n"})}),"\n",(0,s.jsx)(n.h2,{id:"plans",children:"Plans"}),"\n",(0,s.jsx)(n.h3,{id:"new",children:"new"}),"\n",(0,s.jsx)(n.p,{children:"Start a new plan."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli new\ngpt4cli new -n new-plan # with name\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--name/-n"}),": Name of the new plan. The name is generated automatically after first prompt if no name is specified on creation."]}),"\n",(0,s.jsx)(n.h3,{id:"plans-1",children:"plans"}),"\n",(0,s.jsx)(n.p,{children:"List plans. Output includes index, when each plan was last updated, the current branch of each plan, the number of tokens in context, and the number of tokens in the conversation (prior to summarization)."}),"\n",(0,s.jsx)(n.p,{children:"Includes full details on plans in current directory. Also includes names of plans in parent directories and child directories."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli plans\ngpt4cli plans --archived # list archived plans only\n\ng4c pl # alias\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--archived/-a"}),": List archived plans only."]}),"\n",(0,s.jsx)(n.h3,{id:"current",children:"current"}),"\n",(0,s.jsx)(n.p,{children:"Show current plan. Output includes when the plan was last updated and created, the current branch, the number of tokens in context, and the number of tokens in the conversation (prior to summarization)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli current\ng4c cu # alias\n"})}),"\n",(0,s.jsx)(n.h3,{id:"cd",children:"cd"}),"\n",(0,s.jsx)(n.p,{children:"Set current plan by name or index."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli cd # select from a list of plans\ngpt4cli cd some-plan # by name\ngpt4cli cd 4 # by index in `gpt4cli plans`\n"})}),"\n",(0,s.jsx)(n.p,{children:"With no arguments, Gpt4cli prompts you with a list of plans to select from."}),"\n",(0,s.jsxs)(n.p,{children:["With one argument, Gpt4cli selects a plan by name or by index in the ",(0,s.jsx)(n.code,{children:"gpt4cli plans"})," list."]}),"\n",(0,s.jsx)(n.h3,{id:"delete-plan",children:"delete-plan"}),"\n",(0,s.jsx)(n.p,{children:"Delete a plan by name or index."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli delete-plan # select from a list of plans\ngpt4cli delete-plan some-plan # by name\ngpt4cli delete-plan 4 # by index in `gpt4cli plans`\n\ng4c dp # alias\n"})}),"\n",(0,s.jsx)(n.p,{children:"With no arguments, Gpt4cli prompts you with a list of plans to select from."}),"\n",(0,s.jsxs)(n.p,{children:["With one argument, Gpt4cli deletes a plan by name or by index in the ",(0,s.jsx)(n.code,{children:"gpt4cli plans"})," list."]}),"\n",(0,s.jsx)(n.h3,{id:"rename",children:"rename"}),"\n",(0,s.jsx)(n.p,{children:"Rename the current plan."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli rename # prompt for new name\ngpt4cli rename new-name # set new name\n"})}),"\n",(0,s.jsx)(n.p,{children:"With no arguments, Gpt4cli prompts you for a new name."}),"\n",(0,s.jsx)(n.p,{children:"With one argument, Gpt4cli sets the new name."}),"\n",(0,s.jsx)(n.h3,{id:"archive",children:"archive"}),"\n",(0,s.jsx)(n.p,{children:"Archive a plan."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli archive # select from a list of plans\ngpt4cli archive some-plan # by name\ngpt4cli archive 4 # by index in `gpt4cli plans`\n\ng4c arc # alias\n"})}),"\n",(0,s.jsx)(n.p,{children:"With no arguments, Gpt4cli prompts you with a list of plans to select from."}),"\n",(0,s.jsxs)(n.p,{children:["With one argument, Gpt4cli archives a plan by name or by index in the ",(0,s.jsx)(n.code,{children:"gpt4cli plans"})," list."]}),"\n",(0,s.jsx)(n.h3,{id:"unarchive",children:"unarchive"}),"\n",(0,s.jsx)(n.p,{children:"Unarchive a plan."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli unarchive # select from a list of archived plans\ngpt4cli unarchive some-plan # by name\ngpt4cli unarchive 4 # by index in `gpt4cli plans --archived`\ng4c unarc # alias\n"})}),"\n",(0,s.jsx)(n.h2,{id:"context",children:"Context"}),"\n",(0,s.jsx)(n.h3,{id:"load",children:"load"}),"\n",(0,s.jsx)(n.p,{children:"Load files, directories, directory layouts, URLs, notes, images, or piped data into context."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli load component.ts # single file\ngpt4cli load component.ts action.ts reducer.ts # multiple files\ngpt4cli load lib -r # loads lib and all its subdirectories\ngpt4cli load tests/**/*.ts # loads all .ts files in tests and its subdirectories\ngpt4cli load . --tree # loads the layout of the current directory and its subdirectories (file names only)\ngpt4cli load https://redux.js.org/usage/writing-tests # loads the text-only content of the url\nnpm test | gpt4cli load # loads the output of `npm test`\ngpt4cli load -n 'add logging statements to all the code you generate.' # load a note into context\ngpt4cli load ui-mockup.png # load an image into context\n\ng4c l component.ts # alias\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--recursive/-r"}),": Load an entire directory and all its subdirectories."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--tree"}),": Load directory tree layout with file names only."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--note/-n"}),": Load a note into context."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--force/-f"}),": Load files even when ignored by .gitignore or .gpt4cliignore."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--detail/-d"}),": Image detail level when loading an image (high or low)\u2014default is high. See ",(0,s.jsx)(n.a,{href:"https://platform.openai.com/docs/guides/vision/low-or-high-fidelity-image-understanding",children:"https://platform.openai.com/docs/guides/vision/low-or-high-fidelity-image-understanding"})," for more info."]}),"\n",(0,s.jsx)(n.h3,{id:"ls",children:"ls"}),"\n",(0,s.jsx)(n.p,{children:"List everything in the current plan's context. Output includes index, name, type, token size, when the context added, and when the context was last updated."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli ls\n\ngpt4cli list-context # longer alias\n"})}),"\n",(0,s.jsx)(n.h3,{id:"rm",children:"rm"}),"\n",(0,s.jsx)(n.p,{children:"Remove context by index, range, name, or glob."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli rm some-file.ts # by name\ngpt4cli rm app/**/*.ts # by glob pattern\ngpt4cli rm 4 # by index in `gpt4cli ls`\nplandx rm 2-4 # by range of indices\n\ngpt4cli remove # longer alias\ngpt4cli unload # longer alias\n"})}),"\n",(0,s.jsx)(n.h3,{id:"update",children:"update"}),"\n",(0,s.jsx)(n.p,{children:"Update any outdated context."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli update\ng4c u # alias\n"})}),"\n",(0,s.jsx)(n.h3,{id:"clear",children:"clear"}),"\n",(0,s.jsx)(n.p,{children:"Remove all context."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli clear\n"})}),"\n",(0,s.jsx)(n.h2,{id:"control",children:"Control"}),"\n",(0,s.jsx)(n.h3,{id:"tell",children:"tell"}),"\n",(0,s.jsx)(n.p,{children:"Describe a task, ask a question, or chat."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'gpt4cli tell -f prompt.txt # from file\ngpt4cli tell # open vim to write prompt\ngpt4cli tell "add a cancel button to the left of the submit button" # inline\n\ng4c t # alias\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--file/-f"}),": File path containing prompt."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--stop/-s"}),": Stop after a single model response (don't auto-continue)."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--no-build/-n"}),": Don't build proposed changes into pending file updates."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--bg"}),": Run task in the background."]}),"\n",(0,s.jsx)(n.h3,{id:"continue",children:"continue"}),"\n",(0,s.jsx)(n.p,{children:"Continue the plan."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli continue\n\ng4c c # alias\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--stop/-s"}),": Stop after a single model response (don't auto-continue)."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--no-build/-n"}),": Don't build proposed changes into pending file updates."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--bg"}),": Run task in the background."]}),"\n",(0,s.jsx)(n.h3,{id:"build",children:"build"}),"\n",(0,s.jsx)(n.p,{children:"Build any unbuilt pending changes from the plan conversation."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli build\ng4c b # alias\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--bg"}),": Build in the background."]}),"\n",(0,s.jsx)(n.h2,{id:"changes",children:"Changes"}),"\n",(0,s.jsx)(n.h3,{id:"diff",children:"diff"}),"\n",(0,s.jsx)(n.p,{children:"Review pending changes in 'git diff' format."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli diff\n"})}),"\n",(0,s.jsx)(n.h3,{id:"changes-1",children:"changes"}),"\n",(0,s.jsx)(n.p,{children:"Review pending changes in a TUI."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli changes\n"})}),"\n",(0,s.jsx)(n.h3,{id:"apply",children:"apply"}),"\n",(0,s.jsx)(n.p,{children:"Apply pending changes to project files."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli apply\ng4c ap # alias\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--yes/-y"}),": Skip confirmation."]}),"\n",(0,s.jsx)(n.h3,{id:"reject",children:"reject"}),"\n",(0,s.jsx)(n.p,{children:"Reject pending changes to one or more project files."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli reject file.ts # one file\ngpt4cli reject file.ts another-file.ts # multiple files\ngpt4cli reject --all # all pending files\n\ng4c rj file.ts # alias\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--all/-a"}),": Reject all pending files."]}),"\n",(0,s.jsx)(n.h2,{id:"history",children:"History"}),"\n",(0,s.jsx)(n.h3,{id:"log",children:"log"}),"\n",(0,s.jsx)(n.p,{children:"Show plan history."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli log\n\ngpt4cli history # alias\ngpt4cli logs # alias\n"})}),"\n",(0,s.jsx)(n.h3,{id:"rewind",children:"rewind"}),"\n",(0,s.jsx)(n.p,{children:"Rewind to a previous state."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli rewind # rewind 1 step\ngpt4cli rewind 3 # rewind 3 steps\ngpt4cli rewind a7c8d66 # rewind to a specific step from `gpt4cli log`\n"})}),"\n",(0,s.jsx)(n.p,{children:"With no arguments, Gpt4cli rewinds one step."}),"\n",(0,s.jsxs)(n.p,{children:["With one argument, Gpt4cli rewinds the specified number of steps (if an integer is passed) or rewinds to the specified step (if a hash from ",(0,s.jsx)(n.code,{children:"gpt4cli log"})," is passed)."]}),"\n",(0,s.jsx)(n.h3,{id:"convo",children:"convo"}),"\n",(0,s.jsx)(n.p,{children:"Show the current plan's conversation."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli convo\ngpt4cli convo 1 # show a specific message\ngpt4cli convo 1-5 # show a range of messages\ngpt4cli convo 3- # show all messages from 3 to the end\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--plain/-p"}),": Output conversation in plain text with no ANSI codes."]}),"\n",(0,s.jsx)(n.h3,{id:"summary",children:"summary"}),"\n",(0,s.jsx)(n.p,{children:"Show the latest summary of the current plan."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli summary\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--plain/-p"}),": Output summary in plain text with no ANSI codes."]}),"\n",(0,s.jsx)(n.h2,{id:"branches",children:"Branches"}),"\n",(0,s.jsx)(n.h3,{id:"branches-1",children:"branches"}),"\n",(0,s.jsx)(n.p,{children:"List plan branches. Output includes index, name, when the branch was last updated, the number of tokens in context, and the number of tokens in the conversation (prior to summarization)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli branches\ng4c br # alias\n"})}),"\n",(0,s.jsx)(n.h3,{id:"checkout",children:"checkout"}),"\n",(0,s.jsx)(n.p,{children:"Checkout or create a branch."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli checkout # select from a list of branches or prompt to create a new branch\ngpt4cli checkout some-branch # checkout by name or create a new branch with that name\n\ng4c co # alias\n"})}),"\n",(0,s.jsx)(n.h3,{id:"delete-branch",children:"delete-branch"}),"\n",(0,s.jsx)(n.p,{children:"Delete a branch by name or index."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli delete-branch # select from a list of branches\ngpt4cli delete-branch some-branch # by name\ngpt4cli delete-branch 4 # by index in `gpt4cli branches`\n\ng4c db # alias\n"})}),"\n",(0,s.jsx)(n.p,{children:"With no arguments, Gpt4cli prompts you with a list of branches to select from."}),"\n",(0,s.jsxs)(n.p,{children:["With one argument, Gpt4cli deletes a branch by name or by index in the ",(0,s.jsx)(n.code,{children:"gpt4cli branches"})," list."]}),"\n",(0,s.jsx)(n.h2,{id:"background-tasks--streams",children:"Background Tasks / Streams"}),"\n",(0,s.jsx)(n.h3,{id:"ps",children:"ps"}),"\n",(0,s.jsx)(n.p,{children:"List active and recently finished plan streams. Output includes stream ID, plan name, branch name, when the stream was started, and the stream's status (active, finished, stopped, errored, or waiting for a missing file to be selected)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli ps\n"})}),"\n",(0,s.jsx)(n.h3,{id:"connect",children:"connect"}),"\n",(0,s.jsx)(n.p,{children:"Connect to an active plan stream."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli connect # select from a list of active streams\ngpt4cli connect a4de # by stream ID in `gpt4cli ps`\ngpt4cli connect some-plan main # by plan name and branch name\n"})}),"\n",(0,s.jsx)(n.p,{children:"With no arguments, Gpt4cli prompts you with a list of active streams to select from."}),"\n",(0,s.jsxs)(n.p,{children:["With one argument, Gpt4cli connects to a stream by stream ID in the ",(0,s.jsx)(n.code,{children:"gpt4cli ps"})," list."]}),"\n",(0,s.jsx)(n.p,{children:"With two arguments, Gpt4cli connects to a stream by plan name and branch name."}),"\n",(0,s.jsx)(n.h3,{id:"stop",children:"stop"}),"\n",(0,s.jsx)(n.p,{children:"Stop an active plan stream."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli stop # select from a list of active streams\ngpt4cli stop a4de # by stream ID in `gpt4cli ps`\ngpt4cli stop some-plan main # by plan name and branch name\n"})}),"\n",(0,s.jsx)(n.p,{children:"With no arguments, Gpt4cli prompts you with a list of active streams to select from."}),"\n",(0,s.jsxs)(n.p,{children:["With one argument, Gpt4cli connects to a stream by stream ID in the ",(0,s.jsx)(n.code,{children:"gpt4cli ps"})," list."]}),"\n",(0,s.jsx)(n.p,{children:"With two arguments, Gpt4cli connects to a stream by plan name and branch name."}),"\n",(0,s.jsx)(n.h2,{id:"models",children:"Models"}),"\n",(0,s.jsx)(n.h3,{id:"models-1",children:"models"}),"\n",(0,s.jsx)(n.p,{children:"Show current plan models and model settings."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli models\n"})}),"\n",(0,s.jsx)(n.h3,{id:"models-default",children:"models default"}),"\n",(0,s.jsx)(n.p,{children:"Show org-wide default models and model settings for new plans."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli models default\n"})}),"\n",(0,s.jsx)(n.h3,{id:"models-available",children:"models available"}),"\n",(0,s.jsx)(n.p,{children:"Show available models."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli models available # show all available models\ngpt4cli models available --custom # show available custom models only\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"--custom"}),": Show available custom models only."]}),"\n",(0,s.jsx)(n.h3,{id:"set-model",children:"set-model"}),"\n",(0,s.jsx)(n.p,{children:"Update current plan models or model settings."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli set-model # select from a list of models and settings\ngpt4cli set-model planner openai/gpt-4 # set the model for a role\ngpt4cli set-model gpt-4-turbo-latest # set the current plan's model pack by name (sets all model roles at once\u2014see `model-packs` below)\ngpt4cli set-model builder temperature 0.1 # set a model setting for a role\ngpt4cli set-model max-tokens 4000 # set the planner model overall token limit to 4000\ngpt4cli set-model max-convo-tokens 20000  # set how large the conversation can grow before Gpt4cli starts using summaries\n"})}),"\n",(0,s.jsx)(n.p,{children:"With no arguments, Gpt4cli prompts you to select from a list of models and settings."}),"\n",(0,s.jsx)(n.p,{children:"With arguments, can take one of the following forms:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"gpt4cli set-model [role] [model]"}),": Set the model for a role."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"gpt4cli set-model [model-pack]"}),": Set the current plan's model pack by name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"gpt4cli set-model [role] [setting] [value]"}),": Set a model setting for a role."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"gpt4cli set-model [setting] [value]"}),": Set a model setting for the current plan."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Models are specified as ",(0,s.jsx)(n.code,{children:"provider/model-name"}),", e.g. ",(0,s.jsx)(n.code,{children:"openai/gpt-4"}),", ",(0,s.jsx)(n.code,{children:"openrouter/anthropic/claude-opus-3"}),", ",(0,s.jsx)(n.code,{children:"together/mistralai/Mixtral-8x22B-Instruct-v0.1"}),", etc."]}),"\n",(0,s.jsxs)(n.p,{children:["See all the model roles ",(0,s.jsx)(n.a,{href:"/models/roles",children:"here"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Model role settings:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"temperature"}),": Higher temperature means more randomness, which can produce more creativity but also more errors."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"top-p"}),": Top-p sampling is a way to prevent the model from generating improbable text by only considering the most likely tokens."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Plan settings:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"max-tokens"}),": The overall token limit for the planner model."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"max-convo-tokens"}),": How large the conversation can grow before Gpt4cli starts using summaries."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"reserved-output-tokens"}),": The number of tokens reserved for output from the model."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"set-model-default",children:"set-model default"}),"\n",(0,s.jsx)(n.p,{children:"Update org-wide default model settings for new plans."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli set-model default # select from a list of models and settings\ngpt4cli set-model default planner openai/gpt-4 # set the model for a role\n# etc. \u2014 same options as `set-model` above\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Works exactly the same as ",(0,s.jsx)(n.code,{children:"set-model"})," above, but sets the default model settings for all new plans instead of only the current plan."]}),"\n",(0,s.jsx)(n.h3,{id:"models-add",children:"models add"}),"\n",(0,s.jsx)(n.p,{children:"Add a custom model."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli models add\n"})}),"\n",(0,s.jsx)(n.p,{children:"Gpt4cli will prompt you for all required information to add a custom model."}),"\n",(0,s.jsx)(n.h3,{id:"models-delete",children:"models delete"}),"\n",(0,s.jsx)(n.p,{children:"Delete a custom model."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli models delete # select from a list of custom models\ngpt4cli models delete some-model # by name\ngpt4cli models delete 4 # by index in `gpt4cli models available --custom`\n"})}),"\n",(0,s.jsx)(n.h3,{id:"model-packs",children:"model-packs"}),"\n",(0,s.jsx)(n.p,{children:"Show all available model packs."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli model-packs\n"})}),"\n",(0,s.jsx)(n.h3,{id:"model-packs-create",children:"model-packs create"}),"\n",(0,s.jsx)(n.p,{children:"Create a new custom model pack."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli model-packs create\n"})}),"\n",(0,s.jsx)(n.p,{children:"Gpt4cli will prompt you for all required information to create a custom model pack."}),"\n",(0,s.jsx)(n.h3,{id:"model-packs-delete",children:"model-packs delete"}),"\n",(0,s.jsx)(n.p,{children:"Delete a custom model pack."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli model-packs delete\ngpt4cli model-packs delete some-model-pack # by name\ngpt4cli model-packs delete 4 # by index in `gpt4cli model-packs --custom`\n"})}),"\n",(0,s.jsx)(n.h2,{id:"account-management",children:"Account Management"}),"\n",(0,s.jsx)(n.h3,{id:"sign-in",children:"sign-in"}),"\n",(0,s.jsx)(n.p,{children:"Sign in, accept an invite, or create an account."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli sign-in\n"})}),"\n",(0,s.jsx)(n.p,{children:"Gpt4cli will prompt you for all required information to sign in, accept an invite, or create an account."}),"\n",(0,s.jsx)(n.h3,{id:"invite",children:"invite"}),"\n",(0,s.jsx)(n.p,{children:"Invite a user to join your org."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli invite # prompt for email, name, and role\ngpt4cli invite name@domain.com 'Full Name' member # invite with email, name, and role \n"})}),"\n",(0,s.jsxs)(n.p,{children:["Users can be invited as ",(0,s.jsx)(n.code,{children:"member"}),", ",(0,s.jsx)(n.code,{children:"admin"}),", or ",(0,s.jsx)(n.code,{children:"owner"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"revoke",children:"revoke"}),"\n",(0,s.jsx)(n.p,{children:"Revoke an invite or remove a user from your org."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli revoke # select from a list of users and invites\ngpt4cli revoke name@domain.com # by email\n"})}),"\n",(0,s.jsx)(n.h3,{id:"users",children:"users"}),"\n",(0,s.jsx)(n.p,{children:"List users and pending invites in your org."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gpt4cli users\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},8453:(e,n,l)=>{l.d(n,{R:()=>c,x:()=>t});var s=l(6540);const i={},a=s.createContext(i);function c(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);