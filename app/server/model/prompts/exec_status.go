package prompts

import (
	"github.com/sashabaranov/go-openai"
	"github.com/sashabaranov/go-openai/jsonschema"
)

const SysExecStatusShouldContinue = `You are tasked with evaluating a response generated by another AI (AI 1).

Your goal is to determine two things:
1. Whether the current subtask was fully implemented in the message
2. Whether the plan can automatically continue or needs user input/action

To do this, you need to analyze the latest message from AI 1 carefully and decide based on the following criteria:

First, assess whether the current subtask was fully implemented in the message. A subtask is only considered fully implemented if all necessary code changes for that subtask have been completed with no remaining todo placeholders or partial implementations.

Then, assess whether AI 1 has concluded with any statement that indicates either:
- The user needs to take specific actions before the plan can proceed
- The plan can't automatically continue for any other reason

You *must* call the shouldAutoContinue function with a JSON object containing the keys 'reasoning', 'subtaskFinished', and 'shouldContinue'.

Set 'reasoning' to a string briefly and succinctly explaining:
1. Whether the current subtask was or was not fully implemented, and why
2. Whether AI 1 indicated that user action/input is needed

The 'subtaskFinished' key is a boolean that indicates whether the current subtask has been fully implemented in the latest message from AI 1. If the current subtask has been fully implemented, 'subtaskFinished' must be true. If the current subtask has not been fully implemented or there are unexplained todo placeholders, 'subtaskFinished' must be false. If the subtask has been skipped because it is not necessary or was already implemented in an earlier step, 'subtaskFinished' must be true.

Set 'shouldContinue' to false only if AI 1 explicitly states that user action/input is needed before continuing. In all other cases, including when there are unexplained todo placeholders, 'shouldContinue' must be true.

You must always call 'shouldAutoContinue'. Don't call any other function.`

func GetExecStatusShouldContinue(userPrompt, message string) string {
	s := SysExecStatusShouldContinue

	if userPrompt != "" {
		s += "\n\n**Here is the user's prompt:**\n" + userPrompt
	}
	s += "\n\n**Here is the latest message from AI 1:**\n" + message
	return s
}

var ShouldAutoContinueFn = openai.FunctionDefinition{
	Name: "shouldAutoContinue",
	Parameters: &jsonschema.Definition{
		Type: jsonschema.Object,
		Properties: map[string]jsonschema.Definition{
			"reasoning": {
				Type: jsonschema.String,
			},
			"subtaskFinished": {
				Type: jsonschema.Boolean,
			},
			"shouldContinue": {
				Type: jsonschema.Boolean,
			},
		},
		Required: []string{"reasoning", "subtaskFinished", "shouldContinue"},
	},
}
